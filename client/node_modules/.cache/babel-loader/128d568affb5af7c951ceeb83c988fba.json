{"ast":null,"code":"import _asyncToGenerator from\"/Users/dabonne/Documents/Aprentissage/Udemy/NodeJs/Nasa-project-1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/dabonne/Documents/Aprentissage/Udemy/NodeJs/Nasa-project-1/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",body:JSON.stringify(launch),headers:{\"Content-type\":\"application/json\"}});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/launches/\").concat(id),{method:'delete'});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);return _context4.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/dabonne/Documents/Aprentissage/Udemy/NodeJs/Nasa-project-1/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","JSON","stringify","headers","ok","httpAbortLaunch","id","console","log"],"mappings":"+TAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,iDAKf;mGALA,sKAEyBC,CAAAA,KAAK,WAAIF,OAAJ,aAF9B,QAEQG,QAFR,+CAGSA,QAAQ,CAACC,IAAT,EAHT,wD,yDAMeC,CAAAA,e,uJAAf,4LACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,uCAEgCA,CAAAA,QAAQ,CAACC,IAAT,EAFhC,QAEQE,eAFR,iDAGSA,eAAe,CAACC,IAAhB,CAAsB,SAACC,CAAD,CAAGC,CAAH,CAAQ,CACnC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAHT,0D,0DAQeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAEiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCa,MAAM,CAAE,MADgC,CAExCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFkC,CAGxCK,OAAO,CAAE,CACP,eAAgB,kBADT,CAH+B,CAAxB,CAFtB,qJAUW,CACLC,EAAE,CAAE,KADC,CAVX,uE,2DAkBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAEiBlB,CAAAA,KAAK,WAAIF,OAAJ,sBAAwBoB,EAAxB,EAA6B,CAC7CP,MAAM,CAAE,QADqC,CAA7B,CAFtB,oHAMIQ,OAAO,CAACC,GAAR,eANJ,iCAOW,CACLJ,EAAE,CAAE,KADC,CAPX,wE,kDAeA,OACEjB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`)\n  return response.json()\n}\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`)\n  const fetchedLaunches = await response.json()\n  return fetchedLaunches.sort( (a,b)=> {\n    return a.flightNumber - b.flightNumber;\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      body: JSON.stringify(launch),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n  }catch (err){\n    return {\n      ok: false\n    }\n  }\n\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  try{\n    return await fetch(`${API_URL}/launches/${id}`,{\n      method: 'delete',\n    })\n  }catch (err){\n    console.log(err);\n    return {\n      ok: false\n    }\n  }\n\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}