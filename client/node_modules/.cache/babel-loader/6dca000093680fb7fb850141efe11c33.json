{"ast":null,"code":"const API_URL = 'http://localhost:8000';\n\nasync function httpGetPlanets() {\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  return response.json();\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      body: JSON.stringify(launch),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  } // Submit given launch data to launch system.\n\n}\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: 'delete'\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false\n    };\n  } // Delete launch with given ID.\n\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/dabonne/Documents/Apprentissage/Udemy/NodeJs/Nasa-project-1/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","JSON","stringify","headers","err","ok","httpAbortLaunch","id","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,cAAf,GAAgC;AAC9B;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,SAAOE,QAAQ,CAACE,IAAT,EAAP;AACD,C,CACD;;;AACA,eAAeC,eAAf,GAAiC;AAC/B,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AACA,QAAMM,eAAe,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAA9B;AACA,SAAOE,eAAe,CAACC,IAAhB,CAAsB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACnC,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP;AAGD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,MAAG;AACD,WAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;AACxCa,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFkC;AAGxCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH+B,KAAxB,CAAlB;AAOD,GARD,CAQC,OAAOC,GAAP,EAAW;AACV,WAAO;AACLC,MAAAA,EAAE,EAAE;AADC,KAAP;AAGD,GAbqC,CAetC;;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC,MAAG;AACD,WAAO,MAAMlB,KAAK,CAAE,GAAEH,OAAQ,aAAYqB,EAAG,EAA3B,EAA6B;AAC7CR,MAAAA,MAAM,EAAE;AADqC,KAA7B,CAAlB;AAGD,GAJD,CAIC,OAAOK,GAAP,EAAW;AACVI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,WAAO;AACLC,MAAAA,EAAE,EAAE;AADC,KAAP;AAGD,GAVgC,CAYjC;;AACD;;AAED,SACElB,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIES,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`)\n  return response.json()\n}\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`)\n  const fetchedLaunches = await response.json()\n  return fetchedLaunches.sort( (a,b)=> {\n    return a.flightNumber - b.flightNumber;\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      body: JSON.stringify(launch),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n  }catch (err){\n    return {\n      ok: false\n    }\n  }\n\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  try{\n    return await fetch(`${API_URL}/launches/${id}`,{\n      method: 'delete',\n    })\n  }catch (err){\n    console.log(err);\n    return {\n      ok: false\n    }\n  }\n\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}